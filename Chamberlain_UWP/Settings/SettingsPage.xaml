<Page
    x:Class="Chamberlain_UWP.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Chamberlain_UWP"
    xmlns:strings="using:Chamberlain_UWP.Strings"
    xmlns:setting="using:Chamberlain_UWP.Settings"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    NavigationCacheMode="Enabled"
    Background="{ThemeResource NavigationViewExpandedPaneBackground}">

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="Phone">
                    <VisualState.Setters>
                        <Setter Target="PageTitleTextBlock.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>24,48,24,12</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="LayoutPanel.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>24,0,24,24</Thickness>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="768"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--设置-->
        <TextBlock Name="PageTitleTextBlock"
                   Text="{x:Bind strings:Resources.Settings}"
                   Margin="48,48,48,12"
                   Style="{ThemeResource TitleTextBlockStyle}"/>
        <ScrollViewer Grid.Row="1">
            <!--设置面板-->
            <StackPanel x:Name="LayoutPanel" Margin="48,0,48,48" Grid.Row="1">
                <StackPanel.ChildrenTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition IsStaggeringEnabled="True"/>
                        <RepositionThemeTransition IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </StackPanel.ChildrenTransitions>
                <!--应用设置-->
                <!--控件设置-->
                <TextBlock Text="{x:Bind strings:Resources.ControlSettings}" Style="{ThemeResource BaseTextBlockStyle}"/>
                <!--时间选择器-->
                <Grid Margin="0,4,0,0" Padding="16" Style="{StaticResource CardGrid}" ColumnSpacing="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE169;"/>
                    <!--时间选择器选项间隔（分钟）-->
                    <TextBlock Text="{x:Bind strings:Resources.TimeSelectorSpan}"
                               TextWrapping="Wrap"
                               VerticalAlignment="Center" Grid.Column="1"/>
                    <muxc:NumberBox Name="TimepickerIntervalComboBox"
                                    SpinButtonPlacementMode="Inline"
                                    SmallChange="1" LargeChange="5" Minimum="1" Maximum="30"
                                    Width="160" Grid.Column="2"
                                    Value="{x:Bind vm.TimepickerInterval, Mode=TwoWay}"/>
                </Grid>
                <!--侧边栏默认开启状态-->
                <Grid Margin="0,4,0,0" Padding="16,12" Style="{StaticResource CardGrid}" ColumnSpacing="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <SymbolIcon Symbol="GlobalNavigationButton" />
                    <TextBlock Text="{x:Bind strings:Resources.SidebarOpenState}" Grid.Column="1" VerticalAlignment="Center"/>
                    <ToggleSwitch MinWidth="80" Grid.Column="2" HorizontalAlignment="Right"
                                  ToolTipService.ToolTip="此选项在Windows11上可能没有效果"
                                  IsOn="{x:Bind vm.IsPaneOpen, Mode=TwoWay}"/>
                </Grid>
                <!--语言设置-->
                <Grid Margin="0,4,0,0" Padding="16" Style="{StaticResource CardGrid}" ColumnSpacing="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <FontIcon Glyph="&#xF2B7;" />
                    <TextBlock Text="{x:Bind strings:Resources.Language}" Grid.Column="1" VerticalAlignment="Center"/>
                    <ComboBox x:Name="LanguageComboBox"
                              Grid.Column="2" HorizontalAlignment="Right"
                              Width="160"
                              SelectedIndex="{x:Bind vm.LanguageIndex, Mode=TwoWay}"
                              ItemsSource="{x:Bind setting:LanguageHelper.SupportLang}"/>
                </Grid>

                <!--后台任务-->
                <TextBlock Text="{x:Bind strings:Resources.BackgroundTask}" Margin="0,12,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                <Grid Margin="0,4,0,0" Padding="16" Style="{StaticResource CardGrid}" ColumnSpacing="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE7C4;"/>
                    <TextBlock Text="{x:Bind strings:Resources.BackgroundWakeSpan}"
                               Grid.Column="1" VerticalAlignment="Center"
                               TextWrapping="Wrap"/>
                    <muxc:NumberBox Name="TriggerSpanComboBox"
                                    SpinButtonPlacementMode="Inline"
                                    SmallChange="10" LargeChange="100" Minimum="15"
                                    Grid.Column="2" Width="160"
                                    Value="{x:Bind vm.UpdateTriggerInterval, Mode=TwoWay}"/>
                </Grid>

                <!--通知-->
                <muxc:Expander 
                    HorizontalAlignment="Stretch" 
                    HorizontalContentAlignment="Stretch"
                    Margin="0,4,0,0"
                    IsExpanded="{x:Bind NotificationSwitch.IsOn, Mode=OneWay}"
                    Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <Grid Margin="0,12" ColumnSpacing="16">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xED0C;"/>
                            <!--开启通知-->
                            <TextBlock Text="{x:Bind strings:Resources.EnableNotification}" Grid.Column="1" VerticalAlignment="Center"/>
                            <ToggleSwitch Name="NotificationSwitch" 
                                  Grid.Column="2" HorizontalAlignment="Right"
                                  IsOn="{x:Bind vm.IsNotificationEnabled, Mode=TwoWay}" Width="20" MinWidth="80"/>
                        </Grid>
                    </muxc:Expander.Header>
                    <muxc:Expander.Content>
                        <Grid Margin="0,-4" ColumnSpacing="16" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xF5E7;"/>
                            <!--显示通知显示阻塞信息-->
                            <TextBlock Text="{x:Bind strings:Resources.ShowNotificationBlockingInfo}" Grid.Column="1" VerticalAlignment="Center"/>
                            <ToggleSwitch Grid.Column="2" HorizontalAlignment="Right" MinWidth="124"
                                  IsOn="{x:Bind vm.IsNotificationBlockingVisible, Mode=TwoWay}"
                                  IsEnabled="{Binding IsOn, ElementName=NotificationSwitch}"/>
                        </Grid>
                    </muxc:Expander.Content>
                </muxc:Expander>

                <muxc:Expander 
                    HorizontalAlignment="Stretch" 
                    HorizontalContentAlignment="Stretch"
                    Margin="0,4,0,0"
                    IsExpanded="{x:Bind RemindOnTimeSwitch.IsOn, Mode=OneWay}"
                    Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <Grid Margin="0,12" ColumnSpacing="16">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="42"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE15F;"/>
                            <!--每日定时通知-->
                            <TextBlock Text="{x:Bind strings:Resources.DailyNotification}" Grid.Column="1" VerticalAlignment="Center"/>
                            <ToggleSwitch Name="RemindOnTimeSwitch" 
                                          Grid.Column="2" HorizontalAlignment="Right"
                                          IsOn="{x:Bind vm.IsRemindOnTimeEnabled, Mode=TwoWay}" 
                                          IsEnabled="{Binding IsOn, ElementName=NotificationSwitch}"
                                          Width="20" MinWidth="80"/>
                        </Grid>
                    </muxc:Expander.Header>
                    <muxc:Expander.Content>
                        <Grid Margin="0,-4" ColumnSpacing="16" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="42"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE121;"/>
                            <!--每日定时提醒时间-->
                            <TextBlock Text="{x:Bind strings:Resources.DailyNotificationTime}" x:Uid="DailyNotificationTimeText"
                                       Grid.Column="1" VerticalAlignment="Center"
                                       TextWrapping="Wrap"/>
                            <TimePicker Grid.Column="2"
                                        SelectedTime="{x:Bind vm.RemindTime,Mode=TwoWay}"/>
                        </Grid>
                    </muxc:Expander.Content>
                </muxc:Expander>

                <!--同步-->
                <TextBlock Text="{x:Bind strings:Resources.Sync}" Margin="0,12,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                <!--视觉补偿 PaddingY=12,后期可以修改-->
                <Grid Margin="0,4,0,0" Padding="16,12" Style="{StaticResource CardGrid}" ColumnSpacing="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE7C4;"/>
                    <!--应用设置跨设备同步-->
                    <TextBlock Text="{x:Bind strings:Resources.SyncByWindowsOS}" Grid.Column="1" VerticalAlignment="Center"/>
                    <ToggleSwitch x:Name="SettingSyncSwitch"
                                  MinWidth="80" Grid.Column="2" HorizontalAlignment="Right"
                                  IsOn="{x:Bind vm.IsSettingsRoamingEnabled, Mode=TwoWay}"
                                  Toggled="{x:Bind vm.SettingSyncSwitch_Toggled}"/>
                </Grid>

                <!--组件设置-->
                <TextBlock Text="{x:Bind strings:Resources.ComponentSettings}" Margin="0,12,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                <muxc:Expander Name="ReminderExpander" Margin="0,4,0,0"
                               IsExpanded="True" ExpandDirection="Down"
                               VerticalAlignment="Top" HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Stretch"
                               Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <StackPanel Orientation="Horizontal" Height="64">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                      Glyph="&#xE73A;"/>
                            <!--提醒-->
                            <TextBlock Text="{x:Bind strings:Resources.Reminder}" Margin="16,0,0,0" Padding="0,0,0,3" VerticalAlignment="Center"/>
                        </StackPanel>
                    </muxc:Expander.Header>
                    <StackPanel>
                        <!--指定位置存放数据-->
                        <TextBlock Text="{x:Bind strings:Resources.DataSavePath}"
                                   Margin="0,0,0,8"
                                   Style="{ThemeResource BaseTextBlockStyle}"/>
                        <StackPanel>
                            <TextBlock Name="SelectedFolderPathText"
                                       Text="{x:Bind vm.SelectedFolderPath, Mode=OneWay}"
                                       VerticalAlignment="Center" TextWrapping="Wrap"/>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                <!--打开文件夹-->
                                <Button Name="SetReminderFolderButton" Content="{x:Bind strings:Resources.OpenFolder}"
                                        Click="{x:Bind vm.SetReminderExternalFolder}"/>
                                <!--清除-->
                                <Button Content="{x:Bind strings:Resources.Clear}"
                                        Margin="8,0,0,0"
                                        IsEnabled="{x:Bind vm.ClearFolderPathButtonEnabled, Mode=OneWay}"
                                        Click="{x:Bind vm.ClearFolderPath}"/>
                            </StackPanel>
                        </StackPanel>

                        <!--导入Reminder(JSON)-->
                        <TextBlock Text="{x:Bind strings:Resources.ImportReminderJson}"
                                   Margin="0,12,0,8"
                                   Style="{ThemeResource BaseTextBlockStyle}"/>
                        <muxc:InfoBar Name="ImportReminderInfoBar" Title="{x:Bind vm.ImportReminderInfoBar.Title, Mode=OneWay}"
                                      IsOpen="{x:Bind vm.ImportReminderInfoBar.IsOpen, Mode=OneWay}"
                                      Severity="{x:Bind vm.ImportReminderInfoBar.Severity, Mode=OneWay}"
                                      Visibility="{x:Bind vm.ImportReminderInfoBar.Visibility, Mode=OneWay}"/>
                        <Grid ColumnSpacing="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="ImportReminderTextBox" x:Uid="ImportReminderTextBox"
                                     PlaceholderText="JSON格式文本（支持文件拖拽）"
                                     MaxHeight="200"
                                     TextWrapping="Wrap"
                                     Text="{x:Bind vm.ImportReminderText, Mode=TwoWay}"
                                     DragOver="{x:Bind vm.ImportReminderTextBox_DragOver}"
                                     Drop="{x:Bind vm.ImportReminderTextBox_Drop}"/>
                            <Button Name="ImportReminderButton" Content="{x:Bind strings:Resources.Import}"
                                    Grid.Column="1" VerticalAlignment="Top"
                                    HorizontalAlignment="Right"
                                    Click="{x:Bind vm.ImportReminder}"/>
                        </Grid>

                        <!--从JSON文件中读取数据-->
                        <TextBlock Text="{x:Bind strings:Resources.ReminderLoadFromJsonFile}"
                                   Margin="0,12,0,8"
                                   Style="{ThemeResource BaseTextBlockStyle}"/>
                        <RelativePanel>
                            <!--打开文件-->
                            <Button Content="{x:Bind strings:Resources.OpenFile}" Name="OpenFileButton" x:Uid="OpenFileButton" Click="{x:Bind vm.OpenReminderJsonFile}"/>
                            <TextBlock Name="OpenFileTextBlock"
                                       Text="{x:Bind vm.ImportReminderJsonFileText,Mode=OneWay}"
                                       Margin="8,0,0,0"
                                       IsTextSelectionEnabled="True"
                                       RelativePanel.RightOf="OpenFileButton"
                                       RelativePanel.AlignVerticalCenterWithPanel="True"/>
                        </RelativePanel>
                        <!--清除Reminder数据-->
                        <TextBlock Text="{x:Bind strings:Resources.ClearReminderData}"
                                   Margin="0,12,0,8"
                                   Style="{ThemeResource BaseTextBlockStyle}"/>
                        <StackPanel Orientation="Horizontal">
                            <!--删除-->
                            <Button Content="{x:Bind strings:Resources.Delete}" Name="DeleteFlyoutButton"
                                    Click="{x:Bind vm.DeleteButtonFlyout}">
                            </Button>
                            <TextBlock Text="{x:Bind vm.DeleteReminderDataText, Mode=OneWay}"
                                       Margin="8,0,0,1" VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </muxc:Expander>

                <muxc:Expander Name="BackupExpander" Margin="0,4,0,0"
                               IsExpanded="True" ExpandDirection="Down"
                               VerticalAlignment="Top" HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Stretch"
                               Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <StackPanel Orientation="Horizontal" Height="64">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE81C;" />
                            <!--备份-->
                            <TextBlock Text="{x:Bind strings:Resources.BackupTitle}" Margin="16,0,0,0" Padding="0,0,0,3" VerticalAlignment="Center"/>
                        </StackPanel>
                    </muxc:Expander.Header>
                    <StackPanel>
                        <!--清除所有列表数据-->
                        <TextBlock Text="{x:Bind strings:Resources.ClearDataListTitle}"
                                   Margin="0,0,0,8"
                                   Style="{ThemeResource BaseTextBlockStyle}"/>
                        <StackPanel>
                            <!--这可能有助于修复崩溃问题-->
                            <TextBlock Text="{x:Bind strings:Resources.ClearDataListDesc}" x:Uid="ClearDataListDesc" Margin="0,0,0,8"/>
                            <!--清除-->
                            <Button Content="{x:Bind strings:Resources.Clear}" Click="{x:Bind vm.ClearBackupListData}"/>
                        </StackPanel>
                    </StackPanel>

                </muxc:Expander>

                <muxc:Expander Name="DebugOptionExpander"
                               IsExpanded="False" ExpandDirection="Down"
                               Margin="0,4,0,0"
                               VerticalAlignment="Top" 
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Stretch"
                               Expanding="{x:Bind vm.DebugOptionExpanding}"
                               Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <StackPanel Orientation="Horizontal" Height="64">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                      Glyph="&#xE90F;" FontSize="20"/>
                            <!--调试选项-->
                            <TextBlock Text="{x:Bind strings:Resources.DebugOption}" Margin="16,0,0,0" Padding="0,0,0,3" VerticalAlignment="Center"/>
                        </StackPanel>
                    </muxc:Expander.Header>
                    <StackPanel>
                        <!--应用-->
                        <TextBlock Text="{x:Bind strings:Resources.Application}" Style="{ThemeResource BaseTextBlockStyle}"/>
                        <StackPanel>
                            <!--应用程序文件夹-->
                            <TextBlock Text="{x:Bind strings:Resources.ApplicationFolder}" Margin="0,8,0,8"/>
                            <TextBox Text="{x:Bind vm.AppFolderPath,Mode=OneWay}"
                                     IsReadOnly="True"/>
                        </StackPanel>

                        <TextBlock Text="Reminder" Style="{ThemeResource BaseTextBlockStyle}"
                                   Margin="0,12,0,0"/>
                        <StackPanel>
                            <!--JSON（仅输出）-->
                            <TextBlock Text="{x:Bind strings:Resources.JsonOutputOnly}"
                                   Margin="0,8,0,8"
                                   Style="{ThemeResource BodyTextBlockStyle}"/>
                            <TextBox Name="ReminderJsonTextBox"
                                 MaxHeight="200"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap"
                                     Text="{x:Bind vm.ReminderJsonText, Mode=OneWay}"/>
                            <!--保存数据-->
                            <TextBlock Text="{x:Bind strings:Resources.SaveData}"
                                   Margin="0,8,0,0"
                                   Style="{ThemeResource BodyTextBlockStyle}"/>
                            <StackPanel Margin="0,8,0,0">
                                <!--保存Reminder-->
                                <Button Name="ReminderSave" Content="{x:Bind strings:Resources.SaveReminderDataFile}" Click="{x:Bind vm.ReminderSave}"/>
                                <TextBox Name="ReminderSaveTextBox" x:Uid="ReminderSaveTextBox"
                                         Text="{x:Bind vm.ReminderSavePath, Mode=OneWay}"
                                         Margin="0,8,0,0"
                                         IsReadOnly="True"
                                         PlaceholderText="文件保存路径（仅输出）"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </muxc:Expander>

                <!--更新-->
                <TextBlock Text="{x:Bind strings:Resources.Update}" Margin="0,12,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                <muxc:Expander 
                    HorizontalAlignment="Stretch" 
                    HorizontalContentAlignment="Stretch"
                    Margin="0,4,0,0"
                    IsExpanded="{x:Bind CheckUpdateSwitch.IsOn, Mode=OneWay}"
                    Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <Grid Margin="0,12" ColumnSpacing="16">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="42"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE117;"/>
                            <TextBlock Text="{x:Bind strings:Resources.AutoDetectUpdateTitle}" Grid.Column="1" VerticalAlignment="Center"/>
                            <ToggleSwitch Name="CheckUpdateSwitch" 
                                          Grid.Column="2" HorizontalAlignment="Right"
                                          IsOn="{x:Bind vm.IsCheckUpdateEnabled, Mode=TwoWay}"
                                          Width="20" MinWidth="80"/>
                        </Grid>
                    </muxc:Expander.Header>
                    <muxc:Expander.Content>
                        <Grid Margin="0,-4" ColumnSpacing="16" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="42"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE121;"/>
                            <TextBlock Text="{x:Bind vm.UpdateStatusString,Mode=OneWay}"
                                       Grid.Column="1" VerticalAlignment="Center"
                                       TextWrapping="Wrap"/>
                            <Button Content="{x:Bind strings:Resources.Reset}" Grid.Column="2" HorizontalAlignment="Right"
                                    IsEnabled="{x:Bind CheckUpdateSwitch.IsOn, Mode=OneWay}"
                                    Click="{x:Bind vm.ResetUpdateState}"/>
                        </Grid>
                    </muxc:Expander.Content>
                </muxc:Expander>


                <TextBlock Text="{x:Bind strings:Resources.About}" Margin="0,12,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                <muxc:Expander Name="ProgramInfoExpander"
                               IsExpanded="True" ExpandDirection="Down"
                               Margin="0,4,0,0"
                               VerticalAlignment="Top" HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Stretch"
                               Background="{ThemeResource CardBackgroundFillColorDefault}">
                    <muxc:Expander.Header>
                        <StackPanel Orientation="Horizontal" Height="64">
                            <FontIcon Name="ProgramInfoIcon" FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                      Glyph="&#xE946;" FontSize="20"/>
                            <!--详细信息-->
                            <TextBlock Text="{x:Bind strings:Resources.DetailedInfo}" Margin="16,0,0,0" Padding="0,0,0,3" VerticalAlignment="Center"/>
                        </StackPanel>
                    </muxc:Expander.Header>
                    <StackPanel>
                        <Grid RowSpacing="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Chamberlain" Style="{ThemeResource BaseTextBlockStyle}"/>
                            <TextBlock Text="{x:Bind strings:Resources.Version}" Grid.Row="1" Style="{ThemeResource BaseTextBlockStyle}"/>
                            <TextBlock Name="ProgramVersionText"
                                       Text="{x:Bind vm.ProgramVersion}"
                                       Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="{x:Bind strings:Resources.InstallDate}" Grid.Row="2" Style="{ThemeResource BaseTextBlockStyle}"/>
                            <TextBlock Name="ProgramInstalledDate"
                                       Text="{x:Bind vm.ProgramInstalledDate}"
                                       Grid.Row="2" Grid.Column="1"/>
                        </Grid>
                        <Grid Margin="0,24,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="170"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{x:Bind strings:Resources.Developer}" VerticalAlignment="Center" Style="{ThemeResource BaseTextBlockStyle}"/>
                            <HyperlinkButton Content="@huuhghhgyg" NavigateUri="https://github.com/huuhghhgyg"
                                             Grid.Column="1"/>
                            <TextBlock Text="{x:Bind strings:Resources.RepositoryPage}" Grid.Row="1" VerticalAlignment="Center" Style="{ThemeResource BaseTextBlockStyle}"/>
                            <HyperlinkButton Content="Github/Chamberlain_UWP" NavigateUri="https://github.com/huuhghhgyg/Chamberlain_UWP"
                                             Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="{x:Bind strings:Resources.EncounterProblem}" Grid.Row="2" VerticalAlignment="Center" Style="{ThemeResource BaseTextBlockStyle}"/>
                            <HyperlinkButton Content="{x:Bind strings:Resources.FeedbackOnGithub}" NavigateUri="https://github.com/huuhghhgyg/Chamberlain_UWP/issues"
                                             Grid.Row="2" Grid.Column="1"/>
                        </Grid>
                    </StackPanel>
                </muxc:Expander>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
